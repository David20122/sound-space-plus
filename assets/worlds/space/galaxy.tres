[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode async_hidden,blend_add,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;

uniform float speed = 1.0;

uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;

	float rotation = TIME * speed;
	vec2 pivot = vec2(0, 0);
	vec3 uv = VERTEX;
	
	float cosa = cos(rotation);
	float sina = sin(rotation);
	uv.x -= pivot.x;
	uv.y -= pivot.y;

	VERTEX = vec3((cosa * uv.x - sina * uv.y) + pivot.x, (cosa * uv.y + sina * uv.x) + pivot.y, uv.z);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"
